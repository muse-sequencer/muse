#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#=============================================================================
#  MusE
#  Linux Music Editor
#  $Id:$
#
#  Copyright (C) 2002-2023 MusE development team
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the
#  Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#=============================================================================
import tkinter as tk
from tkinter import ttk
import sys

root = tk.Tk()
root.title('Tempo delay')
label = ttk.Label(text="Delay time:")
label.pack(fill=tk.X, padx=5, pady=5)

eventLength = ttk.Combobox(root, state = "readonly")
eventLength['values'] = ["1/1", "1/2", "1/4", "1/8", "1/16", "1/32", "1/64" ]
eventLength.pack(fill=tk.X, padx=5, pady=5)
eventLength.current(3)

label = ttk.Label(text="Number of delays:")
label.pack(fill=tk.X, padx=5, pady=5)
inputValue = ttk.Entry()
inputValue.pack(fill=tk.X, padx=5, pady=5)
inputValue.insert(0,"1")

def execute():

    idx = eventLength.current()
    print(f"execute {idx}")
    testFile = open(sys.argv[1],"r")
    inputEvents = testFile.readlines()
    testFile.close()
    
    numDelay = int(inputValue.get())
    beatDiv = 1 << idx
    delayLength=0 # fill in when we get the beat size value

    outputEvents=[]

    #get beat length to calculate minimum length of event
    for line in inputEvents:
        if line.startswith('BEATLEN'):
            tag,tick = line.split(' ')
            delayLength=int(tick)/beatDiv
            break

    #loop through events
    for line in inputEvents:
        if line.startswith('NOTE'):
            tag,tick,note,length,velocity = line.split(' ')
            outputEvents.append(line)
            for v in range(numDelay):
                outputEvents.append("%s %d %s %s %d\n"%(tag,int(tick)+delayLength*(v+1),note,length,int(velocity)/(v+2)))
        else:
            outputEvents.append(line)


    testFile = open(sys.argv[1],"w")
    testFile.writelines(outputEvents)
    testFile.close()

    sys.exit()

execute_cb = ttk.Button(root, text="Execute", command=execute)
execute_cb.pack(fill=tk.X, padx=5, pady=5)


root.mainloop()
